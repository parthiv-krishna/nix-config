services:
  immich-server:
    container_name: immich_server
    image: "ghcr.io/immich-app/immich-server:release"
    restart: "unless-stopped"
    security_opt:
      - "no-new-privileges:true"
    volumes:
      - "/data/immich:/usr/src/app/upload"
      - "/etc/localtime:/etc/localtime:ro"
    devices:
      # pass thru iGPU for quicksync
      - "/dev/dri:/dev/dri"
    labels:
      - "traefik.enable=true"
      # redirect HTTP to HTTPS
      - "traefik.http.routers.immich.entrypoints=http"
      - "traefik.http.routers.immich.rule=Host(`immich.sub0.net`)"
      - "traefik.http.routers.immich.middlewares=immich-https-redirect"
      - "traefik.http.middlewares.immich-https-redirect.redirectscheme.scheme=https"
      # configure immich HTTPS
      - "traefik.http.routers.immich-secure.entrypoints=https"
      - "traefik.http.routers.immich-secure.rule=Host(`immich.sub0.net`)"
      - "traefik.http.routers.immich-secure.tls=true"
      - "traefik.http.routers.immich-secure.service=immich"
      - "traefik.http.services.immich.loadbalancer.server.port=2283"
      - "traefik.docker.network=traefik_proxy"
      # Enable authelia
      - "traefik.http.routers.immich-secure.middlewares=authelia@docker"
    depends_on:
      - "redis"
      - "database"
  immich-machine-learning:
    container_name: "immich_machine_learning"
    image: "ghcr.io/immich-app/immich-machine-learning:release-cuda"
    restart: "unless-stopped"
    security_opt:
      - "no-new-privileges:true"
    volumes:
      - "/var/lib/immich/ml:/cache"
    deploy:
      resources:
        reservations:
          devices:
            - driver: "nvidia"
              count: 1
              capabilities:
                - "gpu"
  redis:
    container_name: "immich_redis"
    image: "docker.io/redis:alpine"
    restart: "unless-stopped"
    security_opt:
      - "no-new-privileges:true"
    healthcheck:
      test: redis-cli ping || exit 1
  database:
    container_name: "immich_postgres"
    image: "docker.io/tensorchord/pgvecto-rs:pg14-v0.2.0"
    restart: "unless-stopped"
    security_opt:
      - "no-new-privileges:true"
    volumes:
      - "/var/lib/immich/db:/var/lib/postgresql/data"
    healthcheck:
      test: >-
        pg_isready --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" || exit 1; Chksum="$$(psql --dbname="$${POSTGRES_DB}" --username="$${POSTGRES_USER}" --tuples-only --no-align --command='SELECT COALESCE(SUM(checksum_failures), 0) FROM pg_stat_database')"; echo "checksum failure count is $$Chksum"; [ "$$Chksum" = '0' ] || exit 1
      interval: 5m
      start_interval: 30s
      start_period: 5m
    command: >-
      postgres -c shared_preload_libraries=vectors.so -c 'search_path="$$user", public, vectors' -c logging_collector=on -c max_wal_size=2GB -c shared_buffers=512MB -c wal_compression=on
