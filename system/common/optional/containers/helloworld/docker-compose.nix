# Auto-generated using compose2nix v0.3.1.
{ lib, ... }:

{
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
    defaultNetwork.settings = {
      # Required for container networking to be able to use names.
      dns_enabled = true;
    };
  };

  # Enable container name DNS for non-default Podman networks.
  # https://github.com/NixOS/nixpkgs/issues/226365
  networking.firewall.interfaces."podman+".allowedUDPPorts = [ 53 ];

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."helloworld-helloworld" = {
    image = "nginx:alpine";
    labels = {
      "traefik.docker.network" = "traefik_proxy";
      "traefik.enable" = "true";
      "traefik.http.middlewares.helloworld-https-redirect.redirectscheme.scheme" = "https";
      "traefik.http.routers.helloworld-secure.entrypoints" = "https";
      "traefik.http.routers.helloworld-secure.rule" = "Host(`helloworld.sub0.net`)";
      "traefik.http.routers.helloworld-secure.service" = "helloworld";
      "traefik.http.routers.helloworld-secure.tls" = "true";
      "traefik.http.routers.helloworld.entrypoints" = "http";
      "traefik.http.routers.helloworld.middlewares" = "helloworld-https-redirect";
      "traefik.http.routers.helloworld.rule" = "Host(`helloworld.sub0.net`)";
      "traefik.http.services.helloworld.loadbalancer.server.port" = "80";
    };
    log-driver = "journald";
    extraOptions = [
      "--network-alias=helloworld"
      "--network=traefik_proxy"
      "--security-opt=no-new-privileges:true"
    ];
  };
  systemd.services."podman-helloworld-helloworld" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    partOf = [
      "podman-compose-helloworld-root.target"
    ];
    wantedBy = [
      "podman-compose-helloworld-root.target"
    ];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-helloworld-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = [ "multi-user.target" ];
  };
}
